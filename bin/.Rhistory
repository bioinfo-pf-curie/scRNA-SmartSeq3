ylab="#UMIs")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 100)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10Normalized)", ylab = "# Genes", main = "Number of UMIs per genes")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
TrimHistogram(hist_nbUMIperCell)
install.packages("HistogramTools")
library(HistogramTools)
TrimHistogram(hist_nbUMIperCell)
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
hist_nbUMIperCell
hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
TrimHistogram(hist_nbUMIperCell)
TrimHistogram(hist_nbUMIperCell)
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
TrimHistogram(wh_UMI)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
TrimHistogram(wh_UMI)
HistToEcdf(wh_UMI)
HistToEcdf(hist_nbUMIperCell)
plot(HistToEcdf(hist_nbUMIperCell))
hist_nbUMIperCell
TrimHistogram(hist_nbUMIperCell)
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10Normalized)", ylab = "# Cell")
plot(HistToEcdf(hist_nbUMIperCell))
hist_nbGenesPerCell
sqrt(length(range(resume$nb_Genes)))
sqrt(length(resume$nb_Genes))
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
sqrt(length(resume$nb_Genes))
round(sqrt(length(resume$nb_Genes)))
round(sqrt(length(resume$nb_Genes)))+1
resume$nb_Genes
round(sqrt(length(normLogDataLong$value)))+1
round(sqrt(length(normLogDataLong$value)))+1
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10Normalized)", ylab = "# Genes", main = "Number of UMIs per genes", breaks = 294)
normLogDataLong$value
breaks <- pretty(range(normLogDataLong$value), n = nclass.FD(normLogDataLong$value[,]), min.n = 1)
breaks <- pretty(range(normLogDataLong$value), n = nclass.FD(normLogDataLong$value), min.n = 1)
bwidth <- breaks[2] - breaks[1]
bwidth
breaks
breaks[1]
breaks[2]
bwidth
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10Normalized)", ylab = "# Genes", main = "Number of UMIs per genes", breaks = bwidth)
bwidth
normLogDataLong
create_df<-function(list_hist){
df<-data.frame(list_hist$breaks)
df<-df[-1,]
lines<-seq(1,length(list_hist$breaks))
df<-cbind(lines, df, list_hist$counts)
return(df)
}
nbUMIperGene<-create_df(hist_nbUMIperGene)
View(hist_nbUMIperGene)
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
library(plotrix)
library(plyr)
library(dplyr)
library(Seurat)
library(tibble)
library(reshape2)
library(ggplot2)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
create_df<-function(list_hist){
df<-data.frame(list_hist$breaks)
df<-df[-1,]
lines<-seq(1,length(list_hist$breaks))
df<-cbind(lines, df, list_hist$counts)
return(df)
}
nbUMIperGene<-create_df(hist_nbUMIperGene)
df<-data.frame(hist_nbGenesPerCell$breaks)
df<-df[-1,]
lines<-seq(1,length(hist_nbGenesPerCell$breaks))
lines
length(hist_nbGenesPerCell$breaks)
hist_nbGenesPerCell$breaks
hist_nbGenesPerCell$counts
df<-data.frame(hist_nbGenesPerCell$breaks)
df<-df[-1,]
lines<-seq(1,length(hist_nbGenesPerCell$counts))
df<-cbind(lines, df, hist_nbGenesPerCell$counts)
create_df<-function(list_hist){
df<-data.frame(list_hist$breaks)
df<-df[-1,]
lines<-seq(1,length(list_hist$counts))
df<-cbind(lines, df, list_hist$counts)
return(df)
}
nbUMIperGene<-create_df(hist_nbUMIperGene)
colnames(nbUMIperGene)<-c("lines", "# UMIs (log10)", "# Genes")
resume
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks=6)
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks=4)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
resume
ggplot(wh_UMI)
ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white")
ggplot(df, aes(x=weight)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
sort(resume$nb_Genes)
test<-sort(resume$nb_Genes)
test
test<-ddply(resume$nb_UMIs, 1, sort)
test<-ddply(resume, 1, sort(hist_nbUMIperCell))
test<-ddply(resume, 1, sort(hist_nbUMIs))
test<-ddply(resume, 1, sort(nb_UMIs))
test<-ddply(resume, 1, sort(resume$nb_UMIs))
resume
test<-ddply(resume, 1, sort())
test<-ddply(resume$nb_UMIs, 1, sort())
test<-ddply(resume$nb_UMIs, 1, sort
test<-ddply(resume$nb_UMIs, 2, sort
test<-ddply(resume$nb_UMIs, 2, sort)
test<-cbind((rownames(resume)), resume$nb_UMIs)
test
hist_nbUMIperCell<-ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
hist_nbUMIperCell
range(1, resume$nb_UMIs)
(max(resume$nb_UMIs)-min(resume$nb_UMIs))/min(resume$nb_UMIs)
hist_nbUMIperCell<-ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white", bins = 231) + scale_x_log10()
ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white", bins = 231) + scale_x_log10()
hist_nbUMIperCell<-ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
hist_nbUMIperCell
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell", freq = TRUE)
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell", density = T)
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
### Counts
#------------
hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
normLogData
matrixFinal
melt(as.matrix(matrixFinal))
UMIs_per_gene<-melt(as.matrix(matrixFinal))
View(UMIs_per_gene)
UMIs_per_gene[which(UMIs_per_gene$value>0),]
UMIs_per_gene<-UMIs_per_gene[which(UMIs_per_gene$value>0),]
hist(UMIs_per_gene$value, xlab = "# UMIs", ylab = "# Genes", main = "Number of UMIs per genes")
hist(log10(UMIs_per_gene$value), xlab = "# UMIs", ylab = "# Genes", main = "Number of UMIs per genes")
hist(log10(UMIs_per_gene$value), xlab = "# UMIs (log10)", ylab = "# Genes", main = "Number of UMIs per genes")
hist(log10(UMIs_per_gene$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# normalis√© + log10
hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
# log10
hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
hist_nbGenesPerCell<-hist(log10(resume$nb_Genes), xlab = "# Genes", ylab = "# Cell")
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
ggplot(df, aes(x=weight)) +
geom_histogram(color="black", fill="white")
hist_nbUMIperCell<-ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
hist_nbUMIperCell<-ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
ggplot(resume, aes(x=nb_UMIs)) +
geom_histogram(color="black", fill="white") + scale_x_log10()
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 6)
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=log10(resume$nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
View(resume)
# nature
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs", breaks = 5)
# nature
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=log10(resume$nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=log10(resume$nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
# nature
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=resume$nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
wh_UMI<-weighted.hist(log10(resume$nb_UMIs), w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell (log10)",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
wh_UMI<-weighted.hist(resume$NormLog_nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs", breaks = 5)
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="#UMIs")
# nature
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$NormLog_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 5)
hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 5)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 4)
hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 4)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 10)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 3)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 4)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
# nature peinture: best
hist_nbGenesPerCell<-hist(log10(resume$nb_Genes), xlab = "# Genes", ylab = "# Cell")
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
# pas norm + log10 (sans c'est moche)
hist(log10(UMIs_per_gene$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
colnames(whUMI)<-c("lines", "#UMIs per cell", "")
whUMI<-create_df(wh_UMI)
colnames(whUMI)<-c("lines", "#UMIs per cell", "")
whUMI
colnames(whUMI)<-c("lines", "#UMIs per cell", " ")
longMatx
longMatx$value
# norm + log10
# hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# pas norm + log10 (sans c'est moche)
hist(log10(longMatx$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
UMIs_per_gene
UMIs_per_gene$value
# norm + log10
# hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# pas norm + log10 (sans c'est moche)
hist(log10(UMIs_per_gene$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# Transform into long format
longMatx<-melt(as.matrix(matrixFinal))
longMatx<-longMatx[which(longMatx$value>0),]
longMatx
View(longMatx)
samples
longMatx$Var1
longMatx$Var2
genes<-append(genes, nrow(longMatx[which(longMatx$Var2==samp),]) )
# Make resume data
samples<-colnames(matrixFinal)
genes<-vector()
for(samp in samples){
genes<-append(genes, nrow(longMatx[which(longMatx$Var2==samp),]) )
}
resume<-data.frame(nb_UMIs = colSums(matrixFinal), NormLog_nb_UMIs = round(colSums(normLogData)) , nb_Genes=genes)
resume
# norm + log10
# hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# pas norm + log10 (sans c'est moche)
hist(log10(longMatx$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
normData
normData
resume<-data.frame(nb_UMIs = colSums(matrixFinal), Norm_nb_UMIs = round(colSums(normData)) , nb_Genes=genes)
resume
normData
resume<-data.frame(nb_UMIs = colSums(matrixFinal), Norm_nb_UMIs = round(colSums(normData)) , nb_Genes=genes)
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$Norm_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs+1),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
resume$Norm_nb_UMIs
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=resume$Norm_nb_UMIs,
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
log10(resume$Norm_nb_UMIs)
# normalis√© + log10
#hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
# log10
#hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
# normalis√© + log10
#hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
# log10
#hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
# nature + weighted by normlog counts
wh_UMI<-weighted.hist(resume$nb_UMIs, w=log10(resume$Norm_nb_UMIs),
main="Weighted distribution of umis per barcodes",
xlab="#UMIs per cell",
ylab="")
# normalis√© + log10
#hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
# log10
#hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
# norm + log10
# hist_nbUMIperGene<-hist(normLogDataLong$value, xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# pas norm + log10 (sans c'est moche)
hist(log10(longMatx$value), xlab = "# UMIs (Log10)", ylab = "# Genes", main = "Number of UMIs per genes")
# normalis√© + log10
#hist_nbUMIperCell<-hist(resume$NormLog_nb_UMIs, xlab = "# UMIs (Log10)", ylab = "# Cell")
# log10
#hist_nbUMIperCell<-hist(log10(resume$nb_UMIs), xlab = "# UMIs (Log10)", ylab = "# Cell")
# nature peinture: best
hist_nbUMIperCell<-hist(resume$nb_UMIs, xlab = "# UMIs", ylab = "# Cell")
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 4)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell", breaks = 3.5)
# nature peinture: best
hist_nbGenesPerCell<-hist(resume$nb_Genes, xlab = "# Genes", ylab = "# Cell")
listFile<-list.files(path = ".")
listFile
listFile<-list.files(path = "*.py")
listFile
listFile<-list.files(path = "*_header.py")
listFile
listFile<-list.files(path = ".")
listFile
listFile<-list.files(path = ".", pattern= "*.py")
listFile
strsplit(x = "toy_L384T27_umi_Counts.tsv.gz" ,split = "_") [[1]][1]
strsplit(x = "toy_L384T27_umi_Counts.tsv.gz" ,split = "_umi") [[1]][1]
sample
